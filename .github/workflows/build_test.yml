name: Build Environnement tests
on:
  push:
    branches:
      - main
jobs:
  tests_unitaires:
      name: Lancement des tests unitaires
      runs-on: ubuntu-latest
      strategy:
        matrix:
          node-version: [12.x, 14.x, 16.x]
      steps:
        - name: Checkout
          uses: actions/checkout@v3

        - name: Use Node.js ${{ matrix.node-version }}
          uses: actions/setup-node@v3
          with:
            node-version: ${{ matrix.node-version }}
            cache: 'npm'

        - name: installation des packages
          run: npm ci

        - name: Build
          run: npm run build --if-present

        - name: Tests
          run: npm test

  tests_Sonarcloud:
    name: Lancement des tests SonarCloud
    runs-on: ubuntu-latest
    steps:
      - name: Clone Repository
        uses: actions/checkout@v2

      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        with:
          args: >
            -Dsonar.organization=devops-ripault-lairie
            -Dsonar.projectKey=alex-lri_DevOps_TP
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  tests_Trivy:
    name: Lancement des tests Trivy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build de l'image du Dockerfile
        run: |
          docker build -t docker.io/devopstp:${{ github.sha }} .

      - name: Scanner Trivy vulnerability
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'docker.io/devopstp:${{ github.sha }}'
          format: 'table'
          exit-code: '0'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'

  lancement_Firebase:
    name: Deploiement Firebase
    needs: [tests_unitaires, tests_Sonarcloud, tests_Trivy]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Deploiement
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_DEVOPSTP }}'
          projectId: devopstp
          channelId: live
          target: devopstp

  notifs_Discord:
    name: Discord Notifications
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@master

      - name: send custom message with args
        uses: appleboy/discord-action@master
        with:
          webhook_id: ${{ secrets.WEBHOOK_ID }}
          webhook_token: ${{ secrets.WEBHOOK_TOKEN }}
          username: "Mon Bot qui marche trop bien"
          args: The ${{ github.event_name }} event triggered first step.
          message: "Let's gooooooooooooooo!!!!!!!!!!!!!."
